{"version":3,"sources":["hooks/useWindowSize.js","Header.js","Nav.js","Footer.js","Layout.js","Post.js","Feed.js","Home.js","NewPost.js","PostPage.js","EditPost.js","About.js","Missing.js","hooks/useAxiosFetch.js","App.js","api/posts.js","store.js","index.js"],"names":["useWindowSize","useState","width","undefined","height","windowsSize","setWindowsSize","useEffect","handleResize","window","innerWidth","innerHeight","addEventListener","removeEventListener","Header","title","className","Nav","posts","useStoreState","state","search","setSearch","useStoreActions","actions","setSearchResults","filteredResults","filter","post","body","toLowerCase","includes","reverse","onSubmit","e","preventDefault","htmlFor","id","type","placeholder","value","onChange","target","to","Footer","postCount","Layout","Post","datetime","length","slice","Feed","map","Home","isLoading","fetchError","searchResults","NewPost","navigate","useNavigate","postTitle","postBody","savePost","setPostTitle","setPostBody","handleSubmit","a","format","Date","required","PostPage","useParams","deletePost","getPostById","handleDelete","onClick","EditPost","editTitle","editBody","editPost","setEditTitle","setEditBody","handleEdit","About","Missing","useAxiosFetch","dataUrl","data","setData","setFetchError","setIsLoading","isMounted","source","axios","CancelToken","fetchData","url","get","cancelToken","token","response","message","cancel","App","setPosts","path","element","index","create","baseURL","createStore","action","payload","computed","find","toString","thunk","newPost","helpers","getState","api","console","log","delete","updatedPost","put","ReactDOM","render","StrictMode","store","document","getElementById"],"mappings":"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","file":"static/js/main.68537975.chunk.js","sourcesContent":["// CUSTOM HOOK - solo podemos llamar hooks dentro de componentes react, o dentro de custom hooks, NUNCA dentro de bloques if, loops, o funciones standard de js. En archivo es un custom hook para leer el tamaÃ±o de la pantalla\r\n\r\nimport { useState, useEffect } from 'react';\r\n\r\n\r\n// HOOK: useWindowsSize()\r\nconst useWindowSize = () => {\r\n  const [windowsSize, setWindowsSize] = useState({\r\n    width: undefined,\r\n    height: undefined\r\n  });\r\n\r\n  useEffect(() => {\r\n\r\n    const handleResize = () => { // Funcion que lee w y h del windows y asigna windowsSize\r\n      setWindowsSize({\r\n        width: window.innerWidth,\r\n        height: window.innerHeight\r\n      });\r\n    }\r\n\r\n    handleResize(); // 1 Call at load time\r\n\r\n    window.addEventListener('resize', handleResize); // Resize listener added\r\n\r\n    // Call cleanup via return\r\n    return () => window.removeEventListener('resize', handleResize);  \r\n\r\n  },[]);\r\n\r\n  return windowsSize; // El hook devuelve un objeto con las props width y height (del viewport)\r\n\r\n}\r\n\r\nexport default useWindowSize\r\n","import { FaLaptop, FaTabletAlt, FaMobileAlt } from 'react-icons/fa';\r\nimport useWindowSize from './hooks/useWindowSize';\r\n\r\nconst Header = ({ title }) => {\r\n  const { width } = useWindowSize();\r\n\r\n  return (\r\n    <header className=\"Header\">\r\n      <h1>{title}</h1>\r\n      {width < 768 ? <FaMobileAlt/>\r\n        : width < 992 ? <FaTabletAlt/> \r\n          : <FaLaptop/>} \r\n    </header>\r\n  )\r\n}\r\n\r\nexport default Header;\r\n","import { Link } from 'react-router-dom';\r\nimport { useEffect } from 'react';\r\nimport { useStoreState, useStoreActions } from 'easy-peasy';\r\n\r\nconst Nav = () => {\r\n  const posts = useStoreState((state) => state.posts);\r\n  const search = useStoreState((state) => state.search);\r\n  const setSearch = useStoreActions((actions) => actions.setSearch);\r\n  const setSearchResults = useStoreActions((actions) => actions.setSearchResults);\r\n\r\n  useEffect(() => {\r\n    const filteredResults = posts.filter(\r\n      (post) =>\r\n        post.body.toLowerCase().includes(search.toLowerCase()) ||\r\n        post.title.toLowerCase().includes(search.toLowerCase())\r\n    );\r\n\r\n    setSearchResults(filteredResults.reverse()); // reverse: latest post\r\n  }, [posts, search, setSearchResults]);\r\n\r\n  return (\r\n    <nav className=\"Nav\">\r\n      <form className=\"searchForm\" onSubmit={e=>e.preventDefault()}>\r\n        <label htmlFor=\"search\">Search Posts</label>\r\n        <input \r\n          id=\"search\" \r\n          type=\"text\"  \r\n          placeholder=\"Search Posts\" \r\n          value={search} \r\n          onChange={e=>setSearch(e.target.value)}\r\n        />\r\n      </form>\r\n        <ul>\r\n          <li><Link to=\"/\">Home</Link></li>\r\n          <li><Link to=\"post\">Post</Link></li>\r\n          <li><Link to=\"about\">About</Link></li>\r\n        </ul>\r\n    </nav>\r\n  )\r\n}\r\n\r\nexport default Nav;\r\n","import { useStoreState } from \"easy-peasy\";\r\n\r\nconst Footer = () => {\r\n  const postCount = useStoreState((state) => state.postCount)\r\n  return (\r\n    <footer>\r\n      <p>{postCount} Posts</p>\r\n    </footer>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import Header from \"./Header\";\r\nimport Nav from \"./Nav\";\r\nimport Footer from \"./Footer\";\r\n\r\nimport { Outlet } from \"react-router-dom\";\r\n\r\n\r\nconst Layout = () => {\r\n  return (\r\n    <div className=\"App\">\r\n      <Header title=\"React Js Blog\" />\r\n      <Nav />\r\n      <Outlet />\r\n      <Footer />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Layout\r\n","import { Link } from \"react-router-dom\";\r\n\r\nconst Post = ({ post }) => {\r\n  return (\r\n    <article className=\"post flexAux\">\r\n      <Link to={`post/${post.id}`}>\r\n        <h2>{post.title}</h2>\r\n        <p className=\"postDate\">{post.datetime}</p>\r\n      </Link>\r\n      <p className=\"postBodyPre\">\r\n        {\r\n          post.body.length <= 140\r\n            ? post.body // full post\r\n            : `${post.body.slice(0, 140\r\n              )}...` // 50 char\r\n        }\r\n      </p>\r\n    </article>\r\n  );\r\n};\r\n\r\nexport default Post;\r\n","import Post from \"./Post\";\r\n\r\nconst Feed = ({ posts }) => {\r\n  return (\r\n    <>\r\n      {posts.map((post) => (\r\n        <Post key={post.id} post={post} />\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Feed;\r\n","import Feed from \"./Feed\";\r\nimport { useStoreActions, useStoreState } from 'easy-peasy';\r\n\r\nconst Home = ({ isLoading, fetchError }) => {\r\n  const searchResults = useStoreState((state) => state.searchResults);\r\n\r\n  return (\r\n    <main className=\"Home flexAux\">\r\n      {isLoading && <p className=\"statusMsg\">Loading Posts...</p>}\r\n      {!isLoading && fetchError && <p className=\"statusMsg\">{fetchError}</p>}\r\n      {!isLoading &&\r\n        !fetchError &&\r\n        (searchResults.length ? (\r\n          <Feed posts={searchResults} />\r\n        ) : (\r\n          <p>No posts to display</p>\r\n        ))}\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import { useNavigate } from 'react-router-dom';\r\nimport { format } from \"date-fns\";\r\nimport { useStoreState, useStoreActions } from \"easy-peasy\";\r\n\r\nconst NewPost = () => {\r\n  const navigate = useNavigate();\r\n\r\n  const posts = useStoreState((state) => state.posts);\r\n  const postTitle = useStoreState((state) => state.postTitle);\r\n  const postBody = useStoreState((state) => state.postBody);\r\n\r\n  const savePost = useStoreActions((actions) => actions.savePost);\r\n  const setPostTitle = useStoreActions((actions) => actions.setPostTitle);\r\n  const setPostBody = useStoreActions((actions) => actions.setPostBody);\r\n\r\n\r\n  const handleSubmit = async (e) => { \r\n    e.preventDefault();\r\n    const id = posts.length ? posts[posts.length - 1].id + 1 : 1;\r\n    const datetime = format(new Date(), \"MMMM dd, yyyy pp\");\r\n    const newPost = { id, title: postTitle, datetime, body: postBody };\r\n    savePost(newPost);\r\n    navigate('/')\r\n  };\r\n\r\n  return (\r\n    <main className=\"newPost flexAux\">\r\n      <h1>Add new Post:</h1>\r\n      <form className=\"newPostForm\" onSubmit={handleSubmit}>\r\n        <label htmlFor=\"postTitle\">Title:</label>\r\n        <input\r\n          id=\"postTitle\"\r\n          type=\"text\"\r\n          required\r\n          value={postTitle}\r\n          onChange={(e) => setPostTitle(e.target.value)}\r\n        />\r\n        <label htmlFor=\"postBody\">Post:</label>\r\n        <textarea\r\n          id=\"postBody\"\r\n          required\r\n          value={postBody}\r\n          onChange={(e) => setPostBody(e.target.value)}\r\n        />\r\n        <button type=\"submit\">Submit</button>\r\n      </form>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default NewPost;\r\n","import { useParams, Link, useNavigate } from \"react-router-dom\";\r\nimport { useStoreState, useStoreActions } from \"easy-peasy\";\r\n\r\nconst PostPage = () => {\r\n\r\n  const { id } = useParams();\r\n  const navigate = useNavigate();\r\n  const deletePost = useStoreActions((actions) => actions.deletePost);\r\n  const getPostById = useStoreState((state) => state.getPostById);\r\n  const post = getPostById(id)\r\n\r\n  const handleDelete = async (id) => { \r\n    deletePost(id);\r\n    navigate('/');\r\n  };\r\n\r\n  return (\r\n    <main className=\"PostPage flexAux\">\r\n      {post && (\r\n        <article className=\"post\">\r\n          <h2>{post.title}</h2>\r\n          <button className=\"deleteButton\" onClick={() => handleDelete(post.id)}>Delete Post</button>\r\n          <Link to={`/edit/${post.id}`}>\r\n            <button className=\"editButton\">Edit Post</button>\r\n          </Link>\r\n          <p className=\"postDate\">{post.datetime}</p>\r\n          <p className=\"postBody\">{post.body}</p>\r\n        </article>\r\n      )}\r\n      {!post && (\r\n        <article className=\"postNotFound\">\r\n          <h2>Post Not Found</h2>\r\n          <p>Well, that's disappointing!</p>\r\n          <p>\r\n            <Link className=\"toHome\"to=\"/\">Visit Our Homepage</Link>\r\n          </p>\r\n        </article>\r\n        )}\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default PostPage;\r\n","import { useEffect } from \"react\";\r\nimport { useParams, Link, useNavigate } from \"react-router-dom\";\r\nimport { format } from \"date-fns\";\r\nimport { useStoreState, useStoreActions } from \"easy-peasy\";\r\n\r\nconst EditPost = () => {\r\n  const navigate = useNavigate();\r\n  const { id } = useParams();\r\n\r\n  const editTitle = useStoreState((state) => state.editTitle);\r\n  const editBody = useStoreState((state) => state.editBody);\r\n\r\n  const editPost = useStoreActions((actions) => actions.editPost);\r\n  const setEditTitle = useStoreActions((actions) => actions.setEditTitle);\r\n  const setEditBody = useStoreActions((actions) => actions.setEditBody);\r\n\r\n  const getPostById = useStoreState((state) => state.getPostById);\r\n  const post = getPostById(id)\r\n\r\n  useEffect(() => {\r\n    if (post) {\r\n      setEditTitle(post.title); // Seteamos el estado \"editado\" con el ya \"escrito\"\r\n      setEditBody(post.body); // idem\r\n    }\r\n  }, [post, setEditTitle, setEditBody]);\r\n\r\n  const handleEdit = async (id) => {\r\n    const datetime = format(new Date(), \"MMMM dd, yyyy pp\");\r\n    const updatedPost = { id, title: editTitle, datetime, body: editBody };\r\n    editPost(updatedPost);\r\n    navigate(`/post/${id}`)\r\n  };\r\n\r\n  return (\r\n    // Cuerpo del html copiado de <NewPost> component\r\n    <main className=\"newPost flexAux\">\r\n      {editTitle && (\r\n        <>\r\n          <h1>Edit Post:</h1>\r\n          <form className=\"newPostForm\" onSubmit={(e) => e.preventDefault()}>\r\n            {\" \"}\r\n            {/* En este caso en \"onSubmit\" prevenimos default para poder pasar el id en el boton a \"handleEdit\" */}\r\n            <label htmlFor=\"postTitle\">Title:</label>\r\n            <input\r\n              id=\"postTitle\"\r\n              type=\"text\"\r\n              required\r\n              value={editTitle} // En vez de \"postTitle\"\r\n              onChange={(e) => setEditTitle(e.target.value)} // En vez de set \"PostTile\"\r\n            />\r\n            <label htmlFor=\"postBody\">Post:</label>\r\n            <textarea\r\n              id=\"postBody\"\r\n              required\r\n              value={editBody} // En vez de \"postBody\"\r\n              onChange={(e) => setEditBody(e.target.value)} // En vez de \"setPostBody\"\r\n            />\r\n            <button type=\"button\" onClick={() => handleEdit(post.id)}>\r\n              Submit\r\n            </button>\r\n          </form>\r\n        </>\r\n      )}\r\n      {!editTitle && (\r\n        <article className=\"postNotFound\">\r\n          <h2>Post Not Found</h2>\r\n          <p>Well, that's disappointing!</p>\r\n          <p>\r\n            <Link className=\"toHome\" to=\"/\">\r\n              Visit Our Homepage\r\n            </Link>\r\n          </p>\r\n        </article>\r\n      )}\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default EditPost;\r\n","const About = () => {\r\n  return (\r\n    <main className=\"about flexAux\">\r\n      <h2>About</h2>\r\n      <p> This blog app is a project tutorial on learning react. Cool!</p>\r\n    </main>\r\n  )\r\n}\r\n\r\nexport default About;","import { Link } from \"react-router-dom\";\r\n\r\nconst Missing = () => {\r\n  return (\r\n    <main className=\"pageNotFound flexAux\">\r\n      <h2>Page Not Found</h2>\r\n      <p>Well, that's disappointing!</p>\r\n      <p>\r\n        <Link className=\"toHome\" to=\"/\">\r\n          Visit Our Homepage\r\n        </Link>\r\n      </p>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default Missing;\r\n","// La intencion de este custom hook es ser reutilizable en otras aplicaciones\r\n\r\nimport { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst useAxiosFetch = (dataUrl) => {\r\n  const [data, setData] = useState([]); // Fetched Data storage\r\n  const [fetchError, setFetchError] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    let isMounted = true; // Start on true \r\n    const source = axios.CancelToken.source(); // axios cancel token\r\n\r\n    const fetchData = async (url) => {\r\n      setIsLoading(true); // Loading pre API request\r\n      try {\r\n        const response = await axios.get(url, {\r\n          cancelToken: source.token // Cancel on unmount component as second arg\r\n        });\r\n        if (isMounted) {\r\n          setData(response.data);\r\n          setFetchError(null);\r\n        }\r\n      } catch (err) {\r\n        if (isMounted) {\r\n          setFetchError(err.message);\r\n          setData([]);\r\n        }\r\n      // } finally {\r\n      //   isMounted && setTimeout(() => setIsLoading(false), 2000); // Loading sim\r\n      // }\r\n\r\n      } finally {\r\n        isMounted && setIsLoading(false); // Loading completed\r\n      }\r\n    };\r\n\r\n    fetchData(dataUrl);\r\n\r\n    // Cancel request if component is unloaded during that request\r\n    const cleanUp = () => {\r\n      isMounted = false;\r\n      source.cancel(); \r\n    }\r\n\r\n    return cleanUp;\r\n\r\n  }, [dataUrl]); // Dependency: desde el custom hook\r\n\r\n  return { data, fetchError, isLoading };\r\n}\r\n\r\nexport default useAxiosFetch;","import Layout from \"./Layout\";\r\n\r\n\r\nimport Home from \"./Home\";\r\nimport NewPost from \"./NewPost\";\r\nimport PostPage from \"./PostPage\";\r\nimport EditPost from \"./EditPost\";\r\nimport About from \"./About\";\r\nimport Missing from \"./Missing\";\r\nimport { useEffect } from 'react';\r\nimport useAxiosFetch from \"./hooks/useAxiosFetch\";\r\nimport { Route, Routes } from \"react-router-dom\"; \r\nimport { useStoreActions } from 'easy-peasy';\r\n\r\n\r\nfunction App() {\r\n  const setPosts = useStoreActions((actions) => actions.setPosts);\r\n  const { data, fetchError, isLoading } = useAxiosFetch(\r\n    \"http://localhost:3500/posts\"\r\n  );\r\n\r\n  useEffect(() => {\r\n    setPosts(data);\r\n  }, [data, setPosts]);\r\n    \r\n    return (\r\n    \r\n      <Routes>\r\n        <Route path='/' element={<Layout/>}>\r\n          <Route index element={<Home isLoading={isLoading} fetchError={fetchError}/>}/>\r\n          <Route path=\"post\">\r\n            <Route index element={<NewPost/>} />\r\n            <Route path=\":id\" element={<PostPage />} />\r\n          </Route>\r\n          <Route path=\"edit/:id\" element={<EditPost />} />\r\n          <Route path=\"about\" element={<About />} />\r\n          <Route path=\"*\" element={<Missing />} />\r\n        </Route>\r\n      </Routes>\r\n\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import axios from 'axios';\r\n\r\nexport default axios.create({\r\n  baseURL: 'http://localhost:3500'\r\n})","import { createStore, action, thunk, computed} from 'easy-peasy';\r\nimport api from './api/posts';\r\n\r\nexport default createStore({\r\n  posts: [],\r\n  setPosts: action((state, payload) => {\r\n    state.posts = payload;\r\n  }),\r\n\r\n  postTitle: '',\r\n  setPostTitle: action((state, payload) => {\r\n    state.postTitle = payload;\r\n  }),\r\n\r\n  postBody: '',\r\n  setPostBody: action((state, payload) => {\r\n    state.postBody = payload;\r\n  }),\r\n\r\n  editTitle: '',\r\n  setEditTitle: action((state, payload) => {\r\n    state.editTitle = payload;\r\n  }),\r\n\r\n  editBody: '',\r\n  setEditBody: action((state, payload) => {\r\n    state.editBody = payload;\r\n  }),\r\n\r\n  search: '',\r\n  setSearch: action((state, payload) => {\r\n    state.search = payload;\r\n  }),\r\n\r\n  searchResults: [],\r\n  setSearchResults: action((state, payload) => {\r\n    state.searchResults = payload;\r\n  }),\r\n\r\n  postCount: computed((state) => state.posts.length),\r\n\r\n  getPostById: computed((state) => {\r\n    return (id) => state.posts.find(post => (post.id).toString() === id);\r\n  }),\r\n\r\n  savePost: thunk(async (actions, newPost, helpers) => {\r\n    const { posts } = helpers.getState();\r\n    try {\r\n      const response = await api.post('/posts', newPost);\r\n      actions.setPosts([...posts, response.data]);\r\n      actions.setPostTitle('');\r\n      actions.setPostBody('');\r\n    } catch (err) {\r\n      console.log(`Error: ${err.message}`);\r\n    }\r\n  }),\r\n\r\n  deletePost: thunk(async (actions, id, helpers) => {\r\n    const { posts } = helpers.getState(); \r\n    try {\r\n      await api.delete(`/posts/${id}`);\r\n      actions.setPosts(posts.filter((post) => post.id !== id));\r\n    } catch (err) {\r\n      console.log(`Error: ${err.message}`);\r\n    }\r\n  }),\r\n\r\n  editPost: thunk(async (actions, updatedPost, helpers) => {\r\n    const { posts } = helpers.getState();\r\n    const { id } = updatedPost;\r\n    try {\r\n      const response = await api.put(`posts/${id}`, updatedPost);\r\n      actions.setPosts(posts.map((post) => (post.id === id ? { ...response.data } : post))\r\n      );\r\n      actions.setEditTitle(\"\");\r\n      actions.setEditBody(\"\");\r\n    } catch (err) {\r\n      console.log(`Error: ${err.message}`);\r\n    }\r\n  })\r\n\r\n\r\n})","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\r\nimport { StoreProvider } from 'easy-peasy';\r\nimport store from './store';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <StoreProvider store={store}>\r\n      <Router>\r\n        <Routes>\r\n          <Route path=\"/*\" element={<App />} />\r\n        </Routes>\r\n      </Router>\r\n    </StoreProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n\r\n"],"sourceRoot":""}